version: '3.9'

services:
  orders-closer:
    image: orders-closer:latest
    build:
      context: ../orders-closer
    environment:
      - TZ=Europe/Moscow
    networks:
      - internal
    volumes:
      - type: bind
        source: ../logs/orders-closer
        target: /app/logs
        read_only: false
    expose:
      - "8000"
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 8000 --workers 2
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  time-controller:
    image: time-controller:latest
    build:
      context: ../time-controller
    env_file:
      - .env
    environment:
      - TZ=Europe/Moscow
      - ORDERS_CLOSER_API_URL=http://orders-closer:8000
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      orders-closer:
        condition: service_healthy
    networks:
      - internal
    volumes:
      - type: bind
        source: ../logs/time-controller
        target: /app/logs
        read_only: false
    command: poetry run python main.py
    restart: unless-stopped

  postgres:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      - TZ=Europe/Moscow
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d:ro
    networks:
      - internal
    expose:
      - "5432"
    command:
      - "postgres"
      - "-c"
      - "shared_buffers=256MB"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "work_mem=16MB"
    healthcheck:
      test: ["CMD", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  internal:
    driver: bridge